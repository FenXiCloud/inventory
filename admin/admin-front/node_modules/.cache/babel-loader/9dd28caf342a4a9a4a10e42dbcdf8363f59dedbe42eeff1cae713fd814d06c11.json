{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nconst objEqual = (obj1, obj2) => {\n  const keysArr1 = Object.keys(obj1);\n  const keysArr2 = Object.keys(obj2);\n  if (keysArr1.length !== keysArr2.length) return false;else if (keysArr1.length === 0 && keysArr2.length === 0) return true;else return !keysArr1.some(key => obj1[key] != obj2[key]);\n};\nexport const isExsit = (obj, list) => {\n  for (let route of list) {\n    if (routeEqual(route, obj)) {\n      return true;\n    }\n  }\n  return false;\n};\nexport const showTitle = (item, vm) => {\n  let {\n    title\n  } = item.meta;\n  if (!title) return;\n  return title;\n};\nexport const routeEqual = (route1, route2) => {\n  const params1 = route1.params || {};\n  const params2 = route2.params || {};\n  const query1 = route1.query || {};\n  const query2 = route2.query || {};\n  return route1.name === route2.name && objEqual(params1, params2) && objEqual(query1, query2);\n};","map":{"version":3,"names":["objEqual","obj1","obj2","keysArr1","Object","keys","keysArr2","length","some","key","isExsit","obj","list","route","routeEqual","showTitle","item","vm","title","meta","route1","route2","params1","params","params2","query1","query","query2","name"],"sources":["D:/DevWorks/jxc/admin/admin-front/src/components/common/sys-tabs/utils.js"],"sourcesContent":["const objEqual = (obj1, obj2) => {\r\n  const keysArr1 = Object.keys(obj1);\r\n  const keysArr2 = Object.keys(obj2);\r\n  if (keysArr1.length !== keysArr2.length) return false;\r\n  else if (keysArr1.length === 0 && keysArr2.length === 0) return true;\r\n  else return !keysArr1.some(key => obj1[key] != obj2[key]);\r\n};\r\n\r\nexport const isExsit = (obj, list) => {\r\n  for (let route of list) {\r\n    if (routeEqual(route, obj)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const showTitle = (item, vm) => {\r\n  let { title } = item.meta;\r\n  if (!title) return;\r\n  return title;\r\n};\r\n\r\nexport const routeEqual = (route1, route2) => {\r\n  const params1 = route1.params || {};\r\n  const params2 = route2.params || {};\r\n  const query1 = route1.query || {};\r\n  const query2 = route2.query || {};\r\n  return (route1.name === route2.name) && objEqual(params1, params2) && objEqual(query1, query2);\r\n};\r\n"],"mappings":";;AAAA,MAAMA,QAAQ,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;EAC/B,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC;EAClC,MAAMK,QAAQ,GAAGF,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC;EAClC,IAAIC,QAAQ,CAACI,MAAM,KAAKD,QAAQ,CAACC,MAAM,EAAE,OAAO,KAAK,CAAC,KACjD,IAAIJ,QAAQ,CAACI,MAAM,KAAK,CAAC,IAAID,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC,KAChE,OAAO,CAACJ,QAAQ,CAACK,IAAI,CAACC,GAAG,IAAIR,IAAI,CAACQ,GAAG,CAAC,IAAIP,IAAI,CAACO,GAAG,CAAC,CAAC;AAC3D,CAAC;AAED,OAAO,MAAMC,OAAO,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAK;EACpC,KAAK,IAAIC,KAAK,IAAID,IAAI,EAAE;IACtB,IAAIE,UAAU,CAACD,KAAK,EAAEF,GAAG,CAAC,EAAE;MAC1B,OAAO,IAAI;IACb;EACF;EACA,OAAO,KAAK;AACd,CAAC;AAED,OAAO,MAAMI,SAAS,GAAGA,CAACC,IAAI,EAAEC,EAAE,KAAK;EACrC,IAAI;IAAEC;EAAM,CAAC,GAAGF,IAAI,CAACG,IAAI;EACzB,IAAI,CAACD,KAAK,EAAE;EACZ,OAAOA,KAAK;AACd,CAAC;AAED,OAAO,MAAMJ,UAAU,GAAGA,CAACM,MAAM,EAAEC,MAAM,KAAK;EAC5C,MAAMC,OAAO,GAAGF,MAAM,CAACG,MAAM,IAAI,CAAC,CAAC;EACnC,MAAMC,OAAO,GAAGH,MAAM,CAACE,MAAM,IAAI,CAAC,CAAC;EACnC,MAAME,MAAM,GAAGL,MAAM,CAACM,KAAK,IAAI,CAAC,CAAC;EACjC,MAAMC,MAAM,GAAGN,MAAM,CAACK,KAAK,IAAI,CAAC,CAAC;EACjC,OAAQN,MAAM,CAACQ,IAAI,KAAKP,MAAM,CAACO,IAAI,IAAK5B,QAAQ,CAACsB,OAAO,EAAEE,OAAO,CAAC,IAAIxB,QAAQ,CAACyB,MAAM,EAAEE,MAAM,CAAC;AAChG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}