import{u as t}from"../utils.js";const d="h-loadingbar";class a{constructor(){this.dom=null,this.timeout=null,this.inner=null,this.width=0}initDom(){this.dom=document.createElement("div"),this.dom.innerHTML=`<div class="${d}"><div class="${d}-inner"></div></div>`,document.body.appendChild(this.dom),this.inner=this.dom.querySelector(`.${d}-inner`)}start(){this.dom||this.initDom(),t.addClass(this.inner,"loading"),this.loading(5,90)}loading(i,h,e){if(this.width>=h){t.isFunction(e)&&e.call(this);return}let r=i;this.width/h>.7&&(r=i/10),this.timeout&&clearTimeout(this.timeout),this.width=this.width+r,this.width=Math.min(100,this.width),this.width=Math.max(0,this.width),this.inner.style.width=`${this.width}%`,this.timeout=setTimeout(()=>{this.loading(i,h,e)},200)}success(){this.end(1)}end(i){this.dom||this.initDom(),this.loading(100,100,()=>{i||t.addClass(this.inner,"error"),setTimeout(()=>{t.removeClass(this.inner,"loading"),t.removeClass(this.inner,"error"),this.inner.style.width="0",this.width=0},200)})}fail(){this.end(0)}}const s=new a;function n(){return s}n.start=()=>{s.start()};n.success=()=>{s.success()};n.percent=o=>{s.percent(o)};n.fail=()=>{s.fail()};export{n as default};
