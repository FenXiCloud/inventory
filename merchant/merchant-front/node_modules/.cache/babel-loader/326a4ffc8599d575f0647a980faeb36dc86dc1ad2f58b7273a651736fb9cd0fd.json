{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, resolveDirective as _resolveDirective, withDirectives as _withDirectives, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"modal-column\"\n};\nconst _hoisted_2 = {\n  class: \"modal-column-full-body\"\n};\nconst _hoisted_3 = {\n  class: \"modal-column-between\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Input = _resolveComponent(\"Input\");\n  const _component_FormItem = _resolveComponent(\"FormItem\");\n  const _component_Select = _resolveComponent(\"Select\");\n  const _component_Textarea = _resolveComponent(\"Textarea\");\n  const _component_Form = _resolveComponent(\"Form\");\n  const _component_Button = _resolveComponent(\"Button\");\n  const _directive_wordcount = _resolveDirective(\"wordcount\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_Form, {\n    ref: \"form\",\n    model: $data.model,\n    rules: $data.validationRules,\n    mode: \"twocolumn\",\n    \"label-width\": 110\n  }, {\n    default: _withCtx(() => [_createVNode(_component_FormItem, {\n      label: \"客户编码\",\n      prop: \"code\",\n      single: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_Input, {\n        placeholder: \"编码（不填写系统自动生成）\",\n        modelValue: $data.model.code,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.model.code = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_FormItem, {\n      label: \"客户名称\",\n      required: \"\",\n      prop: \"name\",\n      single: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_Input, {\n        placeholder: \"请输入客户名称\",\n        modelValue: $data.model.name,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.model.name = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_FormItem, {\n      label: \"客户分类\",\n      required: \"\",\n      prop: \"customersCategoryId\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_Select, {\n        datas: $data.customCategoryList,\n        keyName: \"id\",\n        titleName: \"name\",\n        modelValue: $data.model.customersCategoryId,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.model.customersCategoryId = $event),\n        placeholder: \"请选择客户分类\",\n        deletable: false\n      }, null, 8 /* PROPS */, [\"datas\", \"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_FormItem, {\n      label: \"客户等级\",\n      required: \"\",\n      prop: \"customersLevelId\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_Select, {\n        datas: $data.customersLevelList,\n        keyName: \"id\",\n        titleName: \"name\",\n        modelValue: $data.model.customersLevelId,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.model.customersLevelId = $event),\n        placeholder: \"请选择客户等级\",\n        deletable: false\n      }, null, 8 /* PROPS */, [\"datas\", \"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_FormItem, {\n      label: \"联系人\",\n      prop: \"linkman\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_Input, {\n        placeholder: \"联系人\",\n        modelValue: $data.model.linkman,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.model.linkman = $event),\n        modelModifiers: {\n          trim: true\n        }\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_FormItem, {\n      label: \"电话\",\n      prop: \"phone\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_Input, {\n        placeholder: \"电话\",\n        modelValue: $data.model.phone,\n        \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.model.phone = $event),\n        modelModifiers: {\n          trim: true\n        }\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_FormItem, {\n      label: \"客户描述\",\n      prop: \"remark\",\n      single: \"\"\n    }, {\n      default: _withCtx(() => [_withDirectives(_createVNode(_component_Textarea, {\n        rows: \"3\",\n        placeholder: \"客户描述\",\n        modelValue: $data.model.remark,\n        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.model.remark = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"]), [[_directive_wordcount, 150]])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_Button, {\n    onClick: _cache[7] || (_cache[7] = $event => _ctx.$emit('close')),\n    loading: $data.loading\n  }, {\n    default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\" 取消 \")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"loading\"]), _createVNode(_component_Button, {\n    color: \"primary\",\n    onClick: $options.confirm,\n    loading: $data.loading\n  }, {\n    default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\" 保存 \")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\", \"loading\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_Form","ref","model","$data","rules","validationRules","mode","default","_withCtx","_component_FormItem","label","prop","single","_component_Input","placeholder","modelValue","code","_cache","$event","_","required","name","_component_Select","datas","customCategoryList","keyName","titleName","customersCategoryId","deletable","customersLevelList","customersLevelId","linkman","modelModifiers","trim","phone","_component_Textarea","rows","remark","_hoisted_3","_component_Button","onClick","_ctx","$emit","loading","_createTextVNode","color","$options","confirm"],"sources":["D:\\DevWorks\\jxc\\merchant\\merchant-front\\src\\views\\basic\\CustomerForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"modal-column\">\r\n    <div class=\"modal-column-full-body\">\r\n      <Form ref=\"form\" :model=\"model\" :rules=\"validationRules\" mode=\"twocolumn\" :label-width=\"110\">\r\n        <FormItem label=\"客户编码\" prop=\"code\" single>\r\n          <Input placeholder=\"编码（不填写系统自动生成）\" v-model=\"model.code\"/>\r\n        </FormItem>\r\n        <FormItem label=\"客户名称\" required prop=\"name\" single>\r\n          <Input placeholder=\"请输入客户名称\" v-model=\"model.name\"/>\r\n        </FormItem>\r\n        <FormItem label=\"客户分类\" required prop=\"customersCategoryId\" >\r\n          <Select :datas=\"customCategoryList\" keyName=\"id\" titleName=\"name\" v-model=\"model.customersCategoryId\"\r\n                  placeholder=\"请选择客户分类\" :deletable=\"false\"/>\r\n        </FormItem>\r\n        <FormItem label=\"客户等级\" required prop=\"customersLevelId\" >\r\n          <Select :datas=\"customersLevelList\" keyName=\"id\" titleName=\"name\" v-model=\"model.customersLevelId\"\r\n                  placeholder=\"请选择客户等级\" :deletable=\"false\"/>\r\n        </FormItem>\r\n        <FormItem label=\"联系人\" prop=\"linkman\" >\r\n          <Input placeholder=\"联系人\" v-model.trim=\"model.linkman\"/>\r\n        </FormItem>\r\n        <FormItem label=\"电话\" prop=\"phone\" >\r\n          <Input placeholder=\"电话\" v-model.trim=\"model.phone\"/>\r\n        </FormItem>\r\n        <FormItem label=\"客户描述\" prop=\"remark\" single>\r\n          <Textarea v-wordcount=\"150\" rows=\"3\" placeholder=\"客户描述\" v-model=\"model.remark\"/>\r\n        </FormItem>\r\n      </Form>\r\n    </div>\r\n    <div class=\"modal-column-between\">\r\n      <Button @click=\"$emit('close')\" :loading=\"loading\">\r\n        取消\r\n      </Button>\r\n      <Button color=\"primary\" @click=\"confirm\" :loading=\"loading\">\r\n        保存\r\n      </Button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * @功能描述: 客户FORM\r\n * @创建时间: 2023年08月08日\r\n * @公司官网: www.fenxi365.com\r\n * @公司信息: 纷析云（杭州）科技有限公司\r\n * @公司介绍: 专注于财务相关软件开发, 企业会计自动化解决方案\r\n */\r\nimport Customer from \"@js/api/Customer\";\r\nimport {message} from \"heyui.ext\";\r\nimport {CopyObj} from \"@common/utils\";\r\nimport CustomerCategory from \"@js/api/CustomerCategory\";\r\nimport CustomerLevel from \"@js/api/CustomerLevel\";\r\n\r\nexport default {\r\n  name: \"CustomersForm\",\r\n  computed: {\r\n  },\r\n  props: {\r\n    entity: Object,\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      customCategoryList: [],\r\n      customersLevelList: [],\r\n      model: {\r\n        id: null,\r\n        code: null,\r\n        name: null,\r\n        linkman: null,\r\n        phone: null,\r\n        customersCategoryId: null,\r\n        customersLevelId: null,\r\n        remark: null\r\n      },\r\n      validationRules: {\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    confirm() {\r\n      let validResult = this.$refs.form.valid();\r\n      if (validResult.result) {\r\n        this.loading = true;\r\n        Customers.save(this.model).then(() => {\r\n          message(\"保存成功~\");\r\n          this.$emit('success');\r\n        }).finally(() => this.loading = false);\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    CopyObj(this.model, this.entity);\r\n    Promise.all([\r\n      CustomersCategory.select(),\r\n        CustomersLevel.select()\r\n    ]).then((results) => {\r\n      this.customCategoryList = results[0].data || [];\r\n      this.customersLevelList = results[1].data || [];\r\n    }).finally(() => this.loading = false);\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}