{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"modal-column\"\n};\nconst _hoisted_2 = {\n  class: \"modal-column-full-body\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"h-uploader-image\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  key: 1,\n  class: \"h-icon-plus\",\n  style: {\n    \"font-size\": \"25px\",\n    \"position\": \"absolute\",\n    \"top\": \"50%\",\n    \"left\": \"50%\",\n    \"transform\": \"translate(-50%,-50%)\"\n  }\n};\nconst _hoisted_6 = {\n  class: \"modal-column-between\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Input = _resolveComponent(\"Input\");\n  const _component_FormItem = _resolveComponent(\"FormItem\");\n  const _component_Form = _resolveComponent(\"Form\");\n  const _component_Button = _resolveComponent(\"Button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_Form, {\n    ref: \"form\",\n    model: $data.model,\n    rules: $data.validationRules\n  }, {\n    default: _withCtx(() => [_createVNode(_component_FormItem, {\n      label: \"编码\",\n      required: \"\",\n      prop: \"code\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_Input, {\n        placeholder: \"请输入分类编码\",\n        disabled: $data.model.id,\n        modelValue: $data.model.code,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.model.code = $event)\n      }, null, 8 /* PROPS */, [\"disabled\", \"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_FormItem, {\n      label: \"名称\",\n      required: \"\",\n      prop: \"name\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_Input, {\n        placeholder: \"请输入分类名称\",\n        modelValue: $data.model.name,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.model.name = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_FormItem, {\n      label: \"排序\",\n      required: \"\",\n      prop: \"sort\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_Input, {\n        placeholder: \"请输入排序\",\n        modelValue: $data.model.sort,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.model.sort = $event)\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_FormItem, {\n      label: \"分类图片\",\n      prop: \"imgPath\",\n      single: \"\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", {\n        class: \"h-uploader-image-empty h-uploader-browse-button\",\n        onClick: _cache[4] || (_cache[4] = $event => _ctx.$refs.uploads.click())\n      }, [$data.model.imgPath ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [$data.model.imgPath ? (_openBlock(), _createElementBlock(\"img\", {\n        key: 0,\n        src: $data.model.imgPath,\n        style: {\n          \"height\": \"70px\",\n          \"width\": \"70px\"\n        }\n      }, null, 8 /* PROPS */, _hoisted_4)) : _createCommentVNode(\"v-if\", true)])) : (_openBlock(), _createElementBlock(\"i\", _hoisted_5)), _createElementVNode(\"input\", {\n        type: \"file\",\n        id: \"uploads\",\n        style: {\n          \"position\": \"absolute\",\n          \"clip\": \"rect(0 0 0 0)\"\n        },\n        ref: \"uploads\",\n        accept: \"image/png, image/jpeg, image/gif, image/jpg\",\n        onChange: _cache[3] || (_cache[3] = $event => $options.selectImg($event))\n      }, null, 544 /* NEED_HYDRATION, NEED_PATCH */)])]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\"        <FormItem label=\\\"上级分类\\\" prop=\\\"parent\\\">\"), _createCommentVNode(\"          <CategoryPicker :option=\\\"categoryOption\\\" type=\\\"key\\\" v-model=\\\"model.pid\\\"></CategoryPicker>\"), _createCommentVNode(\"        </FormItem>\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_Button, {\n    onClick: _cache[5] || (_cache[5] = $event => _ctx.$emit('close')),\n    loading: $data.loading\n  }, {\n    default: _withCtx(() => _cache[6] || (_cache[6] = [_createTextVNode(\" 取消 \")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"loading\"]), _createVNode(_component_Button, {\n    color: \"primary\",\n    onClick: $options.confirm,\n    loading: $data.loading\n  }, {\n    default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\" 保存 \")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\", \"loading\"])])]);\n}","map":{"version":3,"names":["class","key","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_Form","ref","model","$data","rules","validationRules","default","_withCtx","_component_FormItem","label","required","prop","_component_Input","placeholder","disabled","id","modelValue","code","_cache","$event","_","name","sort","single","onClick","_ctx","$refs","uploads","click","imgPath","_hoisted_3","src","_hoisted_4","_createCommentVNode","_hoisted_5","type","accept","onChange","$options","selectImg","_hoisted_6","_component_Button","$emit","loading","_createTextVNode","color","confirm"],"sources":["D:\\DevWorks\\jxc\\merchant\\merchant-front\\src\\views\\basic\\ProductCategoryForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"modal-column\">\r\n    <div class=\"modal-column-full-body\">\r\n      <Form ref=\"form\" :model=\"model\" :rules=\"validationRules\">\r\n        <FormItem label=\"编码\" required prop=\"code\">\r\n          <Input placeholder=\"请输入分类编码\" :disabled=\"model.id\" v-model=\"model.code\"/>\r\n        </FormItem>\r\n        <FormItem label=\"名称\" required prop=\"name\">\r\n          <Input placeholder=\"请输入分类名称\" v-model=\"model.name\"/>\r\n        </FormItem>\r\n        <FormItem label=\"排序\" required prop=\"sort\">\r\n          <Input placeholder=\"请输入排序\" v-model=\"model.sort\"/>\r\n        </FormItem>\r\n        <FormItem label=\"分类图片\" prop=\"imgPath\" single>\r\n          <div class=\"h-uploader-image-empty h-uploader-browse-button\" @click=\"$refs.uploads.click()\">\r\n            <div class=\"h-uploader-image\" v-if=\"model.imgPath\">\r\n              <img :src=\"model.imgPath\" v-if=\"model.imgPath\" style=\"height: 70px;width: 70px\"/>\r\n            </div>\r\n            <i class=\"h-icon-plus\" v-else style=\"font-size: 25px; position: absolute;  top: 50%;  left: 50%; transform: translate(-50%,-50%);\"></i>\r\n            <input type=\"file\" id=\"uploads\" style=\"position:absolute; clip:rect(0 0 0 0);\" ref=\"uploads\" accept=\"image/png, image/jpeg, image/gif, image/jpg\"\r\n                   @change=\"selectImg($event)\">\r\n          </div>\r\n        </FormItem>\r\n        <!--        <FormItem label=\"上级分类\" prop=\"parent\">-->\r\n        <!--          <CategoryPicker :option=\"categoryOption\" type=\"key\" v-model=\"model.pid\"></CategoryPicker>-->\r\n        <!--        </FormItem>-->\r\n      </Form>\r\n    </div>\r\n    <div class=\"modal-column-between\">\r\n      <Button @click=\"$emit('close')\" :loading=\"loading\">\r\n        取消\r\n      </Button>\r\n      <Button color=\"primary\" @click=\"confirm\" :loading=\"loading\">\r\n        保存\r\n      </Button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * @功能描述: 组织机构Form\r\n * @创建时间: 2023年08月08日\r\n * @公司官网: www.fenxi365.com\r\n * @公司信息: 纷析云（杭州）科技有限公司\r\n * @公司介绍: 专注于财务相关软件开发, 企业会计自动化解决方案\r\n */\r\nimport ProductCategory from \"@js/api/ProductCategory\";\r\nimport {message} from \"heyui.ext\";\r\nimport {CopyObj} from \"@common/utils\";\r\nimport {OssUpload} from \"@js/api/App\";\r\n\r\nexport default {\r\n  name: \"ProductCategoryForm\",\r\n  emits: {\r\n    close: null,\r\n    success: null\r\n  },\r\n  props: {\r\n    productCategory: Object,\r\n    parent: Object,\r\n    list: Array,\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      categoryOption: {\r\n        keyName: 'id',\r\n        titleName: 'name',\r\n        dataMode: 'list',\r\n        parentName: 'pid',\r\n        datas: []\r\n      },\r\n      model: {\r\n        id: null,\r\n        code: null,\r\n        pid: null,\r\n        name: null,\r\n        imgPath: null,\r\n        path: null,\r\n        sort: 1,\r\n      },\r\n      validationRules: {}\r\n    }\r\n  },\r\n  methods: {\r\n    confirm() {\r\n      let validResult  = this.$refs.form.valid();\r\n      if (validResult.result) {\r\n\r\n        if (this.model.pid) {\r\n          let parent = this.list.find(c => c.id === this.model.pid);\r\n          this.model.path = (parent.path || '') + '/' + parent.id;\r\n        } else {\r\n          this.model.path = null;\r\n        }\r\n        if (this.model.id) {\r\n          if (this.model.id === this.model.pid) {\r\n            message.error(\"不能引用当前分类\")\r\n            return\r\n          }\r\n        }\r\n        this.loading = true;\r\n        ProductCategory.save(this.model).then(() => {\r\n          message(\"保存成功~\");\r\n          this.$emit('success');\r\n        }).finally(() => this.loading = false);\r\n      }\r\n    },\r\n    selectImg(e) {\r\n      let file = e.target.files[0]\r\n      if (!/\\.(jpg|jpeg|png|JPG|PNG)$/.test(e.target.value)) {\r\n        message.error('图片类型要求：jpeg、jpg、png');\r\n        return false\r\n      }\r\n      if (file && file.size > 102400) {\r\n        e.target.value = '';\r\n        message.error(\"图片大于100KB\");\r\n        return false\r\n      }\r\n      var reader = new FileReader();  //通过FileReader类型读取文件中的数据（异步文件读取）\r\n      reader.onload = function (e) {\r\n        var data = e.target.result;  //返回文件框内上传的对象\r\n        //加载图片获取图片真实宽度和高度\r\n        var image = new Image();\r\n        image.onload = function () {\r\n          var width = image.width;\r\n          var height = image.height;\r\n          if (width !== height || width > 480) {\r\n            message.error(\"图片像素要相等，并且不能超过480\");\r\n            return false\r\n          }\r\n          console.log('文件像素宽：' + width + '，文件像素高：' + height);\r\n        };\r\n        image.src = data;\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n\r\n      const params = new FormData()\r\n      params.append('file', file)\r\n      OssUpload('product', params).then(({data}) => {\r\n        if (data) {\r\n          this.model.imgPath = data;\r\n        }\r\n      })\r\n    },\r\n  },\r\n  created() {\r\n    this.categoryOption.datas = this.list || [];\r\n    CopyObj(this.model, this.productCategory);\r\n    if (this.parent) {\r\n      this.model.pid = this.parent.id;\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}