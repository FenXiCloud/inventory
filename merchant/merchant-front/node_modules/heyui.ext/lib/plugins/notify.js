import{u as s}from"../utils.js";import q from"./draggable.js";const D={type:"dialog",title:"",content:"",style:null,class:null,buttons:[],hasMask:!1,closeOnMask:!0,hasCloseIcon:!1,timeout:0,width:!1,global:!1,noPadding:!1,draggable:!1},C={MODAL:"h-modal",MESSAGE:"h-message",NOTICE:"h-notice"},H="h-notify",N="h-notify-has-close",b="h-notify-body",y="h-notify-container",w="h-notify-wrap",A="h-notify-content",E="h-notify-close",k="h-notify-mask",M="h-notify-show",I="h-icon-close";class O{constructor(a){const i=this;this.mouseoverEvent=!1,this.closeTimeout=!1;let t=this.param=s.extend({},D,a,!0);t.hasFooter=s.isArray(t.buttons)&&t.buttons.length>0&&!t.component;let m="",p="",$="",g="";if(t.hasMask&&($=`<div class="${k}"></div>`),t.hasCloseIcon&&(g=`<span class="${E} ${I}"></span>`),t.title&&(p=`<header class="${t.type}-header">${t.title}</header>`),t.hasFooter){const o=[];for(const l of t.buttons)if(s.isObject(l)){let n=l.className||"";l.style&&(n+=` h-btn-${l.style}`),o.push(`<button type="button" class="h-btn ${n}" attr="${l.type}">${l.name}</button>`)}m=`<footer class="${t.type}-footer">${o.join("")}</footer>`}const x=t.type===C.MODAL&&t.hasMask?w:"",S=`
    ${$}
    <div class="${x}">
      <div class="${y}">
        <div class="${A}">
          ${g}
          ${p}
          <div class="${b}"></div>
          ${m}
        </div>
      </div>
    </div>`;let e=document.createElement("div");s.addClass(e,H),t.hasMask?s.addClass(e,"h-notify-has-mask"):s.addClass(e,"h-notify-no-mask"),t.className&&s.addClass(e,t.className),e.innerHTML=S;let h=this.$notifyBody=e.querySelector(`.${b}`),c=this.$container=e.querySelector(`.${y}`);if(this.el=e,h.innerHTML=t.content,t.hasCloseIcon&&s.addClass(e,N),t.type&&s.addClass(e,t.type),t.height&&(h.style.height=`${t.height}px`),t.maxheight&&(h.style.maxHeight=`${t.maxheight}px`),t.style&&s.addClass(e,t.style),t.width&&(c.style.width=`${t.width}px`),t.draggable){s.addClass(e,"h-notify-draggable");let o=0,l=0,n=null,r=c.querySelector(".h-modal-header");r&&(this.drag=new q(r,{start(d){o=d.clientX,l=d.clientY,n=c.getBoundingClientRect(),c.style.left=`${n.left}px`,c.style.top=`${n.top}px`,c.style.transform="initial",c.style.transition="none"},drag(d){let L=d.clientX-o,T=d.clientY-l;c.style.left=`${n.left+L}px`,c.style.top=`${n.top+T}px`}}))}let f=t.parent||document.body;t.type=="h-notice"&&f.hasChildNodes()?f.insertBefore(e,f.firstChild):f.appendChild(e);let v=document.querySelector(":focus");if(v&&t.type===C.MODAL&&v.blur(),t.hasCloseIcon&&(e.querySelector(`.${E}`).onclick=function(){i.close()}),t.hasFooter){let o=e.querySelectorAll(`.${y} .${t.type}-footer>button`);for(let l of o)l.onclick=function(n){let r=n.target.getAttribute("attr");r&&(r=="cancel"&&i.close(),i.trigger(r))}}if(window.setTimeout(()=>{if(s.addClass(e,M),t.hasMask){let o=document.documentElement,l=window.innerWidth-o.clientWidth;o.style.overflow="hidden",o.style.paddingRight=`${l}px`}},20),t.events&&s.isFunction(t.events.$init)&&t.events.$init.call(null,i,h),t.timeout&&(e.addEventListener("mouseover",()=>{this.mouseoverEvent=!0}),e.addEventListener("mouseleave",()=>{this.mouseoverEvent=!1,this.closeTimeout&&i.close()}),window.setTimeout(()=>{this.closeTimeout=!0,this.mouseoverEvent||i.close()},t.timeout)),t.closeOnMask&&t.hasMask){e.querySelector(`.${k}`).onclick=()=>{this.close()};let o=e.querySelector(`.${w}`);o&&(o.onclick=l=>{l.target==o&&this.close()})}this.popstateEvent=()=>{this.close()},window.addEventListener("popstate",this.popstateEvent)}trigger(a,...i){let t=this.param;t.events&&s.isFunction(t.events[a])&&t.events[a].call(null,this,...i)}close(){const a=this.el;this.drag&&this.drag.destroy();let i=document.documentElement;i.style.overflow="",i.style.paddingRight="",this.trigger("$close"),window.removeEventListener("popstate",this.popstateEvent),s.removeClass(a,M),a.addEventListener("transitionend",t=>{t.target==this.$container&&s.removeDom(a)}),setTimeout(()=>{s.removeDom(a)},400)}}function W(u){return new O(u)}export{W as default};
