import{a as r}from"../utils.js";import k from"./validator/validation/typeValids.js";import y from"./validator/validation/baseValids.js";import x from"./validator/validation/combineValids.js";import"../locale.js";import"../locale/lang/zh-CN.js";import"../locale/lang/en-US.js";import"../utils/format.js";const F=function(f,e){let i={},n=Object.keys(f),t=Object.keys(e);for(let l of t)f[l]||n.push(l);for(let l of n)f[l]&&!e[l]?i[l]=f[l]:!f[l]&&e[l]?i[l]=e[l]:f[l].valid===!1||e[l].valid===!0?i[l]=f[l]:i[l]=e[l];return i},R=function(f,e){if(r.isFunction(f))return f.call(null,...e);if(r.isObject(f)){let i=null;return f.pattern?i=f.pattern.test(String(e[0])):r.isFunction(f.valid)&&(i=f.valid.apply(null,e)),i===!0?!0:r.isFunction(f.message)?f.message():f.message}},m=function(f,e,i="other"){return e===!0||e===void 0?{[f]:{valid:!0,message:null,type:i}}:{[f]:{valid:!1,message:e,type:i}}},A={rules:{},combineRules:[]};class I{constructor(e){r.isObject(e)||console.error("[HeyUI Error] Validator: Please provide the correct validation parameters"),this.combineRuleResults={},this.rules={},this.combineRules={},this.initRules(e)}initRules(e){let i={};r.extend(!0,i,A,e);let n=Object.keys(k);n.unshift("required");for(let t of n){let l=e[t];if(r.isArray(l))for(let s of l){let u=i.rules[s];r.isObject(u)||(u=i.rules[s]={}),t=="required"?u.required=!0:u.type=t}}this.rules=i.rules,this.initCombineRules(i.combineRules)}updateRule(e){this.initRules(e||{})}initCombineRules(e){let i={};for(let n of e){n.id=r.uuid();let t="";n.parentRef&&(t=`${n.parentRef}.`);for(let l of n.refs){let s=t+l;r.isArray(i[s])?i[s].push(n):i[s]=[n]}}this.combineRules=i}valid(e,i,n){let t=[],l=r.uuid(),s=this.validData(e,{uuid:l,next(u){for(let d in u)t.indexOf(d)>-1&&t.splice(t.indexOf(d),1);r.extend(s,u),i&&i.call(this,u),n&&t.length==0&&n.call(this,s)}});for(let u in s)s[u].loading&&t.push(u);return n&&t.length==0&&n.call(this,s),s}validData(e,{prop:i="",next:n,sourceData:t,uuid:l}={}){let s={};if(i!=""&&(s=this.validField(i,t,{next:n,uuid:l})),t==null&&(t=e),r.isArray(e))for(let u=0;u<e.length;u++){let d=`${i}[${u}]`;s=F(s,this.validData(e[u],{next:n,prop:d,sourceData:t,uuid:l}))}else if(r.isObject(e))for(let u in e){let d=i+(i==""?"":".")+u;s=F(s,this.validData(e[u],{next:n,prop:d,sourceData:t,uuid:l}))}return s}getConfig(e){let i=e;return e.indexOf("[")>-1&&!this.rules[e]&&(i=e.replace(/\[\w+\]/,"[]")),this.rules[i]}setConfig(e,i){let n=e;this.rules[n]=r.extend(!0,this.rules[n]||{},i)}validFieldBase({rule:e,value:i,parent:n}){if(e&&Object.keys(e).length>0){let t=R(y.required,[i]);if(e.required&&t!==!0)return t;if(t===!0){if(e.type&&(t=R(k[e.type],[i]),t!==!0))return t;let l=Object.keys(y);l.shift();for(let s of l)if(!r.isNull(e[s])){let u=R(y[s],[i,e[s]]);if(u!==!0)return u}if(!r.isNull(e.valid)&&(t=R(e.valid,[i,n]),t!==!0))return t}else if(!r.isNull(e.validAnyway)&&(t=R(e.validAnyway,[i,n]),t!==!0))return t}return!0}validField(e,i,{next:n,uuid:t}={}){if(r.isNull(e))return m(e);let l=r.getKeyValue(i,e),s=this.rules[e]||{},u=this.combineRules[e]||[];if(e.indexOf("[")>-1){let h=e.replace(/\[\w+\]/,"[]");s=r.extend({},s,this.rules[e],this.rules[h]),u=r.extend([],u,this.combineRules[e],this.combineRules[h])}let d=i,o="";e.lastIndexOf(".")>-1&&(o=e.substr(0,e.lastIndexOf(".")),d=r.getKeyValue(i,o));let a=this.validFieldBase({rule:s,value:l,parent:d});if(a!==!0)return m(e,a,"base");a=this.combineRulesValid(u,l,d,o,t);let b=m(e,void 0,"base");return a===!0&&r.isFunction(n)&&r.isFunction(s.validAsync)&&(s.validAsync.call(null,l,h=>{let v=m(e,h,"async");v[e].loading=!1,n(v)},d,i),b[e].loading=!0),r.extend(b,a)}combineRulesValid(e,i,n,t,l){if(!e)return!0;let s={},u=0;for(let d of e){let o=null,a=(d.parentRef&&t?t+".":"")+d.refs[d.refs.length-1],b=this.combineRuleResults[d.id]||{};if(l&&b.uuid==l+t)o=b.result;else{let v=[];for(let g of d.refs){let O=r.getKeyValue(n,g),j=(d.parentRef&&t?t+".":"")+g;if(this.validFieldBase({rule:this.rules[j],value:O,parent:n})!=!0)break;v.push(O)}if(v.length<d.refs.length)continue;let c=d.valid;if(r.isObject(c)&&r.isString(c.valid)&&(c.valid=x[c.valid],r.isNull(c.valid)))throw Error(`There is no validation rule named ${c}`);o=R(c,v)}u+=1;let h=m(a,o,"combine");l&&(this.combineRuleResults[d.id]={uuid:l+t,result:o}),(!s[a]||s[a].valid)&&r.extend(s,h)}return u==0?!0:s}destroy(){this.rules=null,this.combineRules=null,this.combineRuleResults=null}}export{I as default};
